// Generated by gencpp from file tool_path_planning/PathPlanningTask.msg
// DO NOT EDIT!


#ifndef TOOL_PATH_PLANNING_MESSAGE_PATHPLANNINGTASK_H
#define TOOL_PATH_PLANNING_MESSAGE_PATHPLANNINGTASK_H

#include <ros/service_traits.h>


#include <tool_path_planning/PathPlanningTaskRequest.h>
#include <tool_path_planning/PathPlanningTaskResponse.h>


namespace tool_path_planning
{

struct PathPlanningTask
{

typedef PathPlanningTaskRequest Request;
typedef PathPlanningTaskResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct PathPlanningTask
} // namespace tool_path_planning


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::tool_path_planning::PathPlanningTask > {
  static const char* value()
  {
    return "f3cba7aefdafd396c5a52623838430b7";
  }

  static const char* value(const ::tool_path_planning::PathPlanningTask&) { return value(); }
};

template<>
struct DataType< ::tool_path_planning::PathPlanningTask > {
  static const char* value()
  {
    return "tool_path_planning/PathPlanningTask";
  }

  static const char* value(const ::tool_path_planning::PathPlanningTask&) { return value(); }
};


// service_traits::MD5Sum< ::tool_path_planning::PathPlanningTaskRequest> should match 
// service_traits::MD5Sum< ::tool_path_planning::PathPlanningTask > 
template<>
struct MD5Sum< ::tool_path_planning::PathPlanningTaskRequest>
{
  static const char* value()
  {
    return MD5Sum< ::tool_path_planning::PathPlanningTask >::value();
  }
  static const char* value(const ::tool_path_planning::PathPlanningTaskRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::tool_path_planning::PathPlanningTaskRequest> should match 
// service_traits::DataType< ::tool_path_planning::PathPlanningTask > 
template<>
struct DataType< ::tool_path_planning::PathPlanningTaskRequest>
{
  static const char* value()
  {
    return DataType< ::tool_path_planning::PathPlanningTask >::value();
  }
  static const char* value(const ::tool_path_planning::PathPlanningTaskRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::tool_path_planning::PathPlanningTaskResponse> should match 
// service_traits::MD5Sum< ::tool_path_planning::PathPlanningTask > 
template<>
struct MD5Sum< ::tool_path_planning::PathPlanningTaskResponse>
{
  static const char* value()
  {
    return MD5Sum< ::tool_path_planning::PathPlanningTask >::value();
  }
  static const char* value(const ::tool_path_planning::PathPlanningTaskResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::tool_path_planning::PathPlanningTaskResponse> should match 
// service_traits::DataType< ::tool_path_planning::PathPlanningTask > 
template<>
struct DataType< ::tool_path_planning::PathPlanningTaskResponse>
{
  static const char* value()
  {
    return DataType< ::tool_path_planning::PathPlanningTask >::value();
  }
  static const char* value(const ::tool_path_planning::PathPlanningTaskResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TOOL_PATH_PLANNING_MESSAGE_PATHPLANNINGTASK_H
